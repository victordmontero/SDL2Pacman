# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_linux
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug_linux)
  RESCOMP = windres
  TARGETDIR = bin/Linux/Debug
  TARGET = $(TARGETDIR)/SDL2Pacman
  OBJDIR = obj/Linux/Debug
  DEFINES += -DDEBUG
  INCLUDES +=
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -g
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -g
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lSDL2main -lSDL2 -lSDL2_image -lSDL2_ttf
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS)
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	echo SDL2Pacman
	IF EXIST assets\ (xcopy /Q /E /Y /I assets bin\Linux\Debug\assets > nul) ELSE (xcopy /Q /Y /I assets bin\Linux\Debug\assets > nul)
  endef
all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),debug_windows)
  RESCOMP = windres
  TARGETDIR = bin/Windows/Debug
  TARGET = $(TARGETDIR)/SDL2Pacman.exe
  OBJDIR = obj/Windows/Debug
  DEFINES += -DDEBUG
  INCLUDES += -Ilibs/SDL2-2.0.5/i686-w64-mingw32/include/SDL2 -Ilibs/SDL2_image-2.0.1/i686-w64-mingw32/include/SDL2 -Ilibs/SDL2_ttf-2.0.14/i686-w64-mingw32/include/SDL2
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -g
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -g
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lMingw32 -lSDL2main -lSDL2 -lSDL2_image -lSDL2_ttf
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -Llibs/SDL2-2.0.5/i686-w64-mingw32/lib -Llibs/SDL2_image-2.0.1/i686-w64-mingw32/lib -Llibs/SDL2_ttf-2.0.14/i686-w64-mingw32/lib
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	IF EXIST libs\dlls\ (xcopy /Q /E /Y /I libs\dlls bin\Windows\Debug > nul) ELSE (xcopy /Q /Y /I libs\dlls bin\Windows\Debug > nul)
	echo SDL2Pacman
	IF EXIST assets\ (xcopy /Q /E /Y /I assets bin\Windows\Debug\assets > nul) ELSE (xcopy /Q /Y /I assets bin\Windows\Debug\assets > nul)
  endef
all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release_linux)
  RESCOMP = windres
  TARGETDIR = bin/Linux/Release
  TARGET = $(TARGETDIR)/SDL2Pacman
  OBJDIR = obj/Linux/Release
  DEFINES += -DNDEBUG
  INCLUDES +=
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O2
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O2
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lSDL2main -lSDL2 -lSDL2_image -lSDL2_ttf
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -s
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	echo SDL2Pacman
	IF EXIST assets\ (xcopy /Q /E /Y /I assets bin\Linux\Release\assets > nul) ELSE (xcopy /Q /Y /I assets bin\Linux\Release\assets > nul)
  endef
all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release_windows)
  RESCOMP = windres
  TARGETDIR = bin/Windows/Release
  TARGET = $(TARGETDIR)/SDL2Pacman.exe
  OBJDIR = obj/Windows/Release
  DEFINES += -DNDEBUG
  INCLUDES += -Ilibs/SDL2-2.0.5/i686-w64-mingw32/include/SDL2 -Ilibs/SDL2_image-2.0.1/i686-w64-mingw32/include/SDL2 -Ilibs/SDL2_ttf-2.0.14/i686-w64-mingw32/include/SDL2
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O2
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O2
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += -lMingw32 -lSDL2main -lSDL2 -lSDL2_image -lSDL2_ttf
  LDDEPS +=
  ALL_LDFLAGS += $(LDFLAGS) -Llibs/SDL2-2.0.5/i686-w64-mingw32/lib -Llibs/SDL2_image-2.0.1/i686-w64-mingw32/lib -Llibs/SDL2_ttf-2.0.14/i686-w64-mingw32/lib -s
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
	@echo Running postbuild commands
	IF EXIST libs\dlls\ (xcopy /Q /E /Y /I libs\dlls bin\Windows\Release > nul) ELSE (xcopy /Q /Y /I libs\dlls bin\Windows\Release > nul)
	echo SDL2Pacman
	IF EXIST assets\ (xcopy /Q /E /Y /I assets bin\Windows\Release\assets > nul) ELSE (xcopy /Q /Y /I assets bin\Windows\Release\assets > nul)
  endef
all: $(TARGETDIR) $(OBJDIR) prebuild prelink $(TARGET)
	@:

endif

OBJECTS := \
	$(OBJDIR)/Main.o \

RESOURCES := \

CUSTOMFILES := \

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif

$(TARGET): $(GCH) ${CUSTOMFILES} $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking SDL2Pacman
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning SDL2Pacman
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH)
$(GCH): $(PCH)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
endif

$(OBJDIR)/Main.o: src/Main.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif